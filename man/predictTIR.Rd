% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predictTIR.R
\name{predictTIR}
\alias{predictTIR}
\title{Predict Time-in-Range (TIR) Using Random Forest}
\usage{
predictTIR(
  train_data,
  test_covariates,
  id_col = "patient_id",
  glucose_col = "Glucose",
  covariates,
  lower = 70,
  upper = 180
)
}
\arguments{
\item{train_data}{A long-format data frame containing glucose measurements,
patient identifiers, enrollment time, and covariates.}

\item{test_covariates}{A data frame of test data with baseline covariates for prediction.
Must include the same covariate names as used in training.}

\item{id_col}{Name of the column containing patient IDs. Default is `"patient_id"`.}

\item{glucose_col}{Name of the column containing glucose values. Default is `"Glucose"`.}

\item{covariates}{A character vector specifying the covariate columns to use for modeling.}

\item{lower}{Lower bound of the target glucose range. Default is `70`.}

\item{upper}{Upper bound of the target glucose range. Default is `180`.}
}
\value{
A list with two elements:
\describe{
  \item{`predictions`}{A data frame with `patient_id` and predicted TIR.}
  \item{`importance`}{A data frame of variable importance scores from the random forest model.}
}
}
\description{
This function fits a random forest model on training CGM data to predict
the time-in-range (TIR) metric, defined as the proportion of glucose readings
within a target range (default: 70â€“180 mg/dL). The model is trained using
baseline covariates and applied to a new test dataset to generate predictions.
}
\examples{
\dontrun{
result <- predictTIR(train_data = training_df,
                     test_covariates = test_df,
                     covariates = c("age", "sex", "bmi"))
head(result$predictions)
head(result$importance)
}
}
